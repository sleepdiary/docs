import{_ as t,r as o,o as c,a as r,b as n,d as e,F as l,e as s,c as p}from"./app.0c7c1f85.js";const i={},u=n("h1",{id:"simulation-reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#simulation-reference","aria-hidden":"true"},"#"),s(" Simulation reference")],-1),k=s("This page contains a complete list of available features you can use when you "),d=n("a",{href:"simulate#create-your-own"},"create your own simulation",-1),m=s(". You may also like to see "),b={href:"https://github.com/sleepdiary/docs/tree/main/.vuepress/theme/page-components/Simulate.vue",target:"_blank",rel:"noopener noreferrer"},h=s("the simulation framework on GitHub"),y=s("."),_=p(`<h2 id="pre-declared-variables" tabindex="-1"><a class="header-anchor" href="#pre-declared-variables" aria-hidden="true">#</a> Pre-declared variables</h2><p>JavaScript usually requires you to declare variables before using them. For convenience, the framework declares the variables <code>n</code>, <code>asleep_at</code> and <code>awake_at</code> by default:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// this is OK because the framework pre-declares the variables:</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> n<span class="token operator">&lt;</span><span class="token number">365</span><span class="token punctuation">;</span> <span class="token operator">++</span>n <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  asleep_at <span class="token operator">=</span> n<span class="token operator">*</span>days <span class="token operator">+</span>  <span class="token number">6</span><span class="token operator">*</span>hours<span class="token punctuation">;</span>
  awake_at  <span class="token operator">=</span> n<span class="token operator">*</span>days <span class="token operator">+</span> <span class="token number">14</span><span class="token operator">*</span>hours<span class="token punctuation">;</span>
  <span class="token function">add_diary_entry</span><span class="token punctuation">(</span><span class="token punctuation">{</span> asleep_at<span class="token punctuation">,</span> awake_at <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// if you use another variable name, make sure to declare it:</span>
<span class="token keyword">var</span> x<span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> x<span class="token operator">&lt;</span><span class="token number">365</span><span class="token punctuation">;</span> <span class="token operator">++</span>x <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  asleep_at <span class="token operator">=</span> x<span class="token operator">*</span>days <span class="token operator">+</span>  <span class="token number">6</span><span class="token operator">*</span>hours<span class="token punctuation">;</span>
  awake_at  <span class="token operator">=</span> x<span class="token operator">*</span>days <span class="token operator">+</span> <span class="token number">14</span><span class="token operator">*</span>hours<span class="token punctuation">;</span>
  <span class="token function">add_diary_entry</span><span class="token punctuation">(</span><span class="token punctuation">{</span> asleep_at<span class="token punctuation">,</span> awake_at <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="specify-dates" tabindex="-1"><a class="header-anchor" href="#specify-dates" aria-hidden="true">#</a> Specify Dates</h2><p>Simulations calculate dates by adding a number of milliseconds to a start date. For readability, the framework provides the constants <code>seconds</code>, <code>minutes</code>, <code>hours</code> and <code>days</code> as aliases for the equivalent number of milliseconds. You can also set the start date with the <code>start_at()</code> function:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// set the start date and time:</span>
<span class="token function">start_at</span><span class="token punctuation">(</span><span class="token string">&quot;2020-03-25T18:00:00Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// specify times literally or using the constants provided:</span>
<span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// one millisecond</span>
<span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span> <span class="token comment">// one second</span>
<span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">*</span>seconds<span class="token punctuation">;</span> <span class="token comment">// also one second</span>
<span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">*</span>minutes<span class="token punctuation">;</span> <span class="token comment">// 60*seconds</span>
<span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">*</span>hours<span class="token punctuation">;</span> <span class="token comment">// 60*minutes</span>
<span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">*</span>days<span class="token punctuation">;</span> <span class="token comment">// 24*hours</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="add-a-diary-entry" tabindex="-1"><a class="header-anchor" href="#add-a-diary-entry" aria-hidden="true">#</a> Add a diary entry</h2><p>The <code>add_diary_entry</code> function takes an <code>options</code> argument, which is an object containing the following values:</p><ul><li><code>asleep_at</code> or <code>begin</code> - the time when the entry began (in milliseconds since the start date)</li><li><code>awake_at</code> or <code>end</code> - the time when the entry ended (in milliseconds since the start date)</li><li><code>status</code> - your status during the time described by the entry (default: <code>asleep</code>)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// these two are identical:</span>
<span class="token function">add_diary_entry</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">asleep_at</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// one second past the start date</span>
  <span class="token literal-property property">awake_at</span><span class="token operator">:</span> <span class="token number">8</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">// 8 hours past the start date</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">add_diary_entry</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">begin</span><span class="token operator">:</span> 1_seconds<span class="token punctuation">,</span> <span class="token comment">// one second past the start date</span>
  <span class="token literal-property property">end</span>  <span class="token operator">:</span> <span class="token number">8</span><span class="token operator">*</span>hours<span class="token punctuation">,</span> <span class="token comment">// 8 hours past the start date</span>
  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;asleep&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// specify an alarm clock woke you up:</span>
<span class="token function">add_diary_entry</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">begin</span><span class="token operator">:</span> <span class="token number">8</span><span class="token operator">*</span>hours<span class="token punctuation">,</span> <span class="token comment">// 8 hours past the start date</span>
  <span class="token literal-property property">end</span>  <span class="token operator">:</span> <span class="token number">8</span><span class="token operator">*</span>hours<span class="token punctuation">,</span> <span class="token comment">// 8 hours past the start date</span>
  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;alarm&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,10),f=s("The list of valid record types is stored in "),v=n("code",null,"DiaryStandardRecordStatus",-1),w=s(" in "),g={href:"https://github.com/andrew-sayers/core/blob/main/src/Standard/engine.js#L31",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"Standard/engine.js",-1),q=s("."),j=p(`<h2 id="miscellaneous" tabindex="-1"><a class="header-anchor" href="#miscellaneous" aria-hidden="true">#</a> Miscellaneous</h2><p>The framework also provides the <code>normal_distribution()</code> function (a random number with a bell curve centred on <code>0</code>) and <code>day_of_week()</code> (the English name of the date at a specified time). You can also use any JavaScript functionality to generate models:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Use various functions to calculate a time:</span>
<span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">4</span><span class="token operator">*</span>days <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span><span class="token function">normal_distribution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>hours <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>minutes<span class="token punctuation">;</span>

<span class="token keyword">switch</span> <span class="token punctuation">(</span> <span class="token function">day_of_week</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token string">&quot;Sunday&quot;</span><span class="token operator">:</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token string">&quot;Monday&quot;</span><span class="token operator">:</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token string">&quot;Tueday&quot;</span><span class="token operator">:</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token string">&quot;Wednesday&quot;</span><span class="token operator">:</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token string">&quot;Thursday&quot;</span><span class="token operator">:</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token string">&quot;Friday&quot;</span><span class="token operator">:</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token string">&quot;Saturday&quot;</span><span class="token operator">:</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,3);function S(T,F){const a=o("ExternalLinkIcon");return c(),r(l,null,[u,n("p",null,[k,d,m,n("a",b,[h,e(a)]),y]),_,n("p",null,[f,v,w,n("a",g,[x,e(a)]),q]),j],64)}var N=t(i,[["render",S],["__file","simulation-reference.html.vue"]]);export{N as default};
